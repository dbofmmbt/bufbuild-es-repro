"use strict";
// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file proto/test.proto (package test, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestMessage = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message test.TestMessage
 */
class TestMessage extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string id = 1;
         */
        this.id = "";
        /**
         * @generated from field: string content = 2;
         */
        this.content = "";
        /**
         * @generated from field: int32 timestamp = 3;
         */
        this.timestamp = 0;
        /**
         * @generated from field: repeated string tags = 4;
         */
        this.tags = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TestMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TestMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TestMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TestMessage, a, b);
    }
}
exports.TestMessage = TestMessage;
TestMessage.runtime = protobuf_1.proto3;
TestMessage.typeName = "test.TestMessage";
TestMessage.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "timestamp", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "tags", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
]);
